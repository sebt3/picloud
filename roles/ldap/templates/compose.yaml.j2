version: '3.5'
volumes:
  data:
  conf:
  web:
networks:
  auth:
{% if domain_wildcard==1 %}
  public:
    external: true
{% endif %}
configs:
  nginx:
    file: nginx.conf

services:
  ldap:
    image: {{ ldap_image }}
    environment:
      LDAP_DOMAIN: "{{ domain }}"
      LDAP_CONFIG_PASSWORD: "{{ admin_password }}"
      LDAP_ADMIN_PASSWORD: "{{ admin_password }}"
    volumes:
      - data:/var/lib/ldap
      - conf:/etc/ldap/slapd.d
    networks:
    - auth

  fusiondirectory:
    image: {{ fusiondirectory_image }}
    environment:
      LDAP_HOST: "ldap"
      LDAP_DOMAIN: "{{ domain }}"
      LDAP_CONFIG_PASSWORD: "{{ admin_password }}"
      LDAP_ADMIN_PASSWORD: "{{ admin_password }}"
    volumes:
      - web:/var/web
    networks:
    - auth
  nginx:
    image: {{ nginx_image }}
    configs:
      - source: nginx
        target: /etc/nginx/nginx.conf
    volumes:
      - web:/var/web
    networks:
    - auth
{% if domain_wildcard!=1 or export_ldap!=1 %}
    ports:
      - target: 80
        published: 8081
{% else %}
    - public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.middlewares.compress.compress=true
        - traefik.http.routers.{{ stack }}.rule=Host(`useradmin.{{ domain }}`)
        - traefik.http.services.{{ stack }}.loadbalancer.server.port=80
{% if domain_use_tls==1 %}
        - traefik.http.routers.{{ stack }}.tls=true
        - traefik.http.routers.{{ stack }}.tls.certresolver=le
        - traefik.http.routers.{{ stack }}.entrypoints=websecure
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
        - traefik.http.routers.redirect-{{ stack }}.rule=Host(`{{ domain }}`)
        - traefik.http.routers.redirect-{{ stack }}.middlewares=redirect-to-https
        - traefik.http.routers.redirect-{{ stack }}.entrypoints=web
{% else %}
        - traefik.http.routers.{{ stack }}.entrypoints=web
{% endif %}
{% endif %}
